{
    "componentChunkName": "component---src-templates-post-template-tsx",
    "path": "/post/211130/typescript_basic/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h3>1. Typescript란?</h3>\n<blockquote>\n<p>Typescript는 2012년에 발표된 오픈 소스 프로그래밍 언어로, 대규모 Javascript\r\n애플리케이션 개발을 목적으로 Microsoft에 의해 개발되었다.</p>\n</blockquote>\n<p>Typescript는 Javascript, ECMAScript를 포함하는 Superset이며,Javascript, ECMAScript에서 지원하는 기능에 인터페이스, 제너릭, 형 관리 등 추가적인 기능을\r\n지원한다.\r\n<br></p>\n<br>\n<h4>1-1 트랜스파일러</h4>\n<p>웹브라우저 엔진은 Typescript를 해석할 수 없다. 따라서 Typescript 파일(.ts)을 Javascript(.js) 파일로 변환해야한다. 그래서 Typescript가 Javascript로 출력되는 것을 컴파일이 아닌 트랜스파일이라고 한다. 또한 이러한 언어를 메타 언어라고 한다.</p>\n<blockquote>\n<p>근데 왜 Typescript 파일을 컴파일한다고 하는걸까?</p>\n</blockquote>\n<p><strong>아마도 내 생각에는 Typescript 파일 -> 트랜스 파일 -> Javascript 파일 -> 컴파일</strong> 주기에 있어서 첫 단계와 마지막 단계가 Typescript-> 컴파일이라서 그런게 아닐까라는 추측이다.\r\n<br>\r\n<br></p>\n<h4>1-2. 사용하는 이유</h4>\n<ul>\n<li>Type을 사용하여 어플리케이션을 개발할 때 정적 타입 검사 및 코드 리팩토링 등 생산성 높은 개발이 가능</li>\n<li>타입을 통해 컴포넌트 간 인터페이스를 정의할 수 있음</li>\n<li>모던한 자바스크립트 기능을 포함함</li>\n<li>신뢰성있는 어플리케이션 개발 가능</li>\n</ul>\n<h4>1-3. 개인적으로 타입스크립트를 사용하는 이유</h4>\n<ul>\n<li>원래 Javascript 생태계를 좋아했는데, 유연함 때문에 데인적이 많다.</li>\n<li>안정적인 서버사이드를 개발하기 위해</li>\n</ul>\n<h3>2. Typescript 타입</h3>\n<h4>2.1 암시적 타입 지정</h4>\n<p>아래와 같이 초기에 name이라는 변수에 string 값을 할당하면\r\n타입스크립트는 이 변수의 타입은 암시적으로 string이라고 설정한다.</p>\n<deckgo-highlight-code language=\"ts\" theme=\"material\"  >\n          <code slot=\"code\">let name = &#39;leesky&#39;\r\nname = 23 // error!</code>\n        </deckgo-highlight-code>\n<blockquote>\n<p>그럼 아무것도 안쓰고 선언만하면?</p>\n</blockquote>\n<deckgo-highlight-code language=\"ts\" theme=\"material\"  >\n          <code slot=\"code\">let name // 암시적으로 아무거나 때려넣을 수 있는 any 타입으로 설정한다.\r\nname = &#39;leesky&#39; // 암거나 떄려들감!\r\nname = 23</code>\n        </deckgo-highlight-code>\n<br>\n<h4>2.2 명시적 타입 설정</h4>\n<p>Typescript는 변수를 선언할 때 명시적으로 할당할 수 있다. Typescript는 Javascript으 슈퍼셋이므로 Javascript의 타입 뿐아니라 클래스, 인터페이스 등을 타입으로 설정 가능하다.</p>\n<ul>\n<li>Typescript 타입\n<ul>\n<li>null</li>\n<li>undefined</li>\n<li>number</li>\n<li>string</li>\n<li>boolean</li>\n<li>array</li>\n<li>function</li>\n<li>object</li>\n<li>Symbol</li>\n<li>enum</li>\n<li>tuple</li>\n<li>never</li>\n<li>void</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>그외 interface, class, 커스텀 타입 등 엄청 무궁무진함!</p>\n</blockquote>\n<p>아래는 타입 적용방법!</p>\n<deckgo-highlight-code language=\"ts\" theme=\"material\"  >\n          <code slot=\"code\">let name: string = &#39;leesky&#39;\r\nlet age: number = 23</code>\n        </deckgo-highlight-code>\n<br>\n<h4>참고</h4>\n<ul>\n<li><a href=\"https://yamoo9.gitbook.io/typescript/\" target=\"_blank\" rel=\"nofollow\">Typescript 가이드북</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-typescript%EB%9E%80\">1. Typescript란?</a></p>\n<ul>\n<li><a href=\"#1-1-%ED%8A%B8%EB%9E%9C%EC%8A%A4%ED%8C%8C%EC%9D%BC%EB%9F%AC\">1-1 트랜스파일러</a></li>\n<li><a href=\"#1-2-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\">1-2. 사용하는 이유</a></li>\n<li><a href=\"#1-3-%EA%B0%9C%EC%9D%B8%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\">1-3. 개인적으로 타입스크립트를 사용하는 이유</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-typescript-%ED%83%80%EC%9E%85\">2. Typescript 타입</a></p>\n<ul>\n<li><a href=\"#21-%EC%95%94%EC%8B%9C%EC%A0%81-%ED%83%80%EC%9E%85-%EC%A7%80%EC%A0%95\">2.1 암시적 타입 지정</a></li>\n<li><a href=\"#22-%EB%AA%85%EC%8B%9C%EC%A0%81-%ED%83%80%EC%9E%85-%EC%84%A4%EC%A0%95\">2.2 명시적 타입 설정</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Typescript 기본기 다지기(1)","summary":"Typescript과 타입에 대해서 알아보자!","date":"2021.11.30.","categories":["Typescript"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#3878c8","images":{"fallback":{"src":"/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/5371e/typescript.png","srcSet":"/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/24271/typescript.png 56w,\n/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/39d80/typescript.png 113w,\n/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/5371e/typescript.png 225w","sizes":"(min-width: 225px) 225px, 100vw"},"sources":[{"srcSet":"/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/d66a6/typescript.webp 56w,\n/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/a72fd/typescript.webp 113w,\n/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/1cf63/typescript.webp 225w","type":"image/webp","sizes":"(min-width: 225px) 225px, 100vw"}]},"width":225,"height":225}},"publicURL":"/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/typescript.png"}}}}]}},"pageContext":{"slug":"/post/211130/typescript_basic/"}},
    "staticQueryHashes": []}