{
    "componentChunkName": "component---src-templates-post-template-tsx",
    "path": "/post/220225/os_dualmode/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h3>1. 이중모드의 등장</h3>\n<p>한 컴퓨터를 여러 사람이 동시에 사용하는 환경에서의 문제점이 있을 수 있습니다. 혹은\r\n한사람이 여러 개의 프로그램을 동시에 사용하는 환경에서의 문제점도 동일합니다.</p>\n<ul>\n<li>한 사람의 고의/실수 프로그램이 전체에 영향을 미칩니다.</li>\n<li>STOP, HALT, RESET 등 사용자 프로그램은 STOP 등 치명적 명령 사용을 불가능하게 할 수 있어야합니다.</li>\n</ul>\n<p>위와 같은 문제를 예방하기 위해서 CPU가 명령어를 해석할 때, 사용자 모드와 관리자 모드를 나누어\r\n명령어 수행의 권한을 확인합니다.</p>\n<ul>\n<li>\n<p>사용자(user) 모드 vs 관리자(supervisor) 모드</p>\n</li>\n<li>\n<p>이중 모드 (dual mode)</p>\n</li>\n<li>\n<p>관리자 모드 = 시스템 모드 = 모니터 모드 = 특권 모드</p>\n</li>\n<li>\n<p>Supervisor, system, monitor, priviliged mode</p>\n</li>\n<li>\n<p>특권 명령 (privileged instructions) : 관리자 모드에서만 내릴 수 있는 명령들 입니다.</p>\n<ul>\n<li>STOP, HALT, RESET, SET_TIMER, SET_HW, … 등등</li>\n</ul>\n</li>\n</ul>\n<h3>2. 이중모드란</h3>\n<p>CPU안에 있는 register의 flag를 통해 이중모드를 나타낼 수 있습니다. 대부분의 CPU는 이중모드를 지원함으로 명령의 안전을 보장합니다.</p>\n<ul>\n<li>운영체제 서비스 실행될 때는 관리자 모드</li>\n<li>사용자 프로그램 실행될 때는 사용자 모드</li>\n<li>하드웨어/소프트웨어 인터럽트 발생할 때 관리자 모드</li>\n<li>운영체제 서비스가 끝나면 다시 사용자 모드</li>\n</ul>\n<p>일반적 프로그램에서 이중모드의 변경은 다음과 같습니다.</p>\n<deckgo-highlight-code  theme=\"material\"  >\n          <code slot=\"code\">1. 프로그램 적재\r\n2. User mode\r\n3. 키보드 마우스 클릭 인터럽트\r\n4. System mode(ISR)\r\n5. User mode\r\n6. 모니터, 디스크, 프린터 등을 통한 인터럽트\r\n7. System mode(ISR)\r\n8. User mode로 변경 후 반복</code>\n        </deckgo-highlight-code>\n<br>\n<h3>3. 하드웨어 보호</h3>\n<p>하드웨어를 보호 하기 위해 운영체제가 이중모드를 사용하는 방법에 대해 알아봅니다.\r\n<br>\r\n<br></p>\n<h4>3-1. 입출력장치 보호(Input/output device protection)</h4>\n<p>사용자의 잘못된 입출력 명령이나 다른 사용자의 입출력, 정보 등에 방해가 있을 수 있습니다.\r\n예를 들어 프린트 혼선이나, 리셋, 다른 사람의 파일 읽고 쓰기(하드디스크)등이 있겠습니다.\r\n<br>\r\n<br></p>\n<p>해결법:</p>\n<ul>\n<li>입출력 명령을 특권명령으로: IN, OUT</li>\n<li>입출력을 하려면 운영체제에게 요청하고 (system mode 전환)</li>\n<li>운영체제가 입출력 대행을 한 이후 다시 user mode 복귀</li>\n<li>올바른 요청이 아니면 운영체제가 거부</li>\n</ul>\n<p>30분 부터 다시 시청</p>\n<h4>3-2. 메모리 보호(Memory protection)</h4>\n<h4>3-3. CPU보호(CPU protectiopn)</h4>\n<br>\n<h4>참고</h4>\n<ul>\n<li><a href=\"http://www.kocw.net/home/search/kemView.do?kemId=978503\" target=\"_blank\" rel=\"nofollow\">경성대학교 양희재 교수님 운영체제</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-%EC%9D%B4%EC%A4%91%EB%AA%A8%EB%93%9C%EC%9D%98-%EB%93%B1%EC%9E%A5\">1. 이중모드의 등장</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EC%9D%B4%EC%A4%91%EB%AA%A8%EB%93%9C%EB%9E%80\">2. 이중모드란</a></p>\n</li>\n<li>\n<p><a href=\"#3-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EB%B3%B4%ED%98%B8\">3. 하드웨어 보호</a></p>\n<ul>\n<li><a href=\"#3-1-%EC%9E%85%EC%B6%9C%EB%A0%A5%EC%9E%A5%EC%B9%98-%EB%B3%B4%ED%98%B8inputoutput-device-protection\">3-1. 입출력장치 보호(Input/output device protection)</a></li>\n<li><a href=\"#3-2-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EB%B3%B4%ED%98%B8memory-protection\">3-2. 메모리 보호(Memory protection)</a></li>\n<li><a href=\"#3-3-cpu%EB%B3%B4%ED%98%B8cpu-protectiopn\">3-3. CPU보호(CPU protectiopn)</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"운영체제 이중모드, 하드웨어 보호","summary":"경성대학교 양희재 교수님의 운영체제 4강 요약","date":"2022.02.25.","categories":["OS"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#086898","images":{"fallback":{"src":"/static/cbb5ab93a2c2120533ea23eef202bce8/182ea/osBg.jpg","srcSet":"/static/cbb5ab93a2c2120533ea23eef202bce8/0a2ae/osBg.jpg 193w,\n/static/cbb5ab93a2c2120533ea23eef202bce8/dc189/osBg.jpg 385w,\n/static/cbb5ab93a2c2120533ea23eef202bce8/182ea/osBg.jpg 770w","sizes":"(min-width: 770px) 770px, 100vw"},"sources":[{"srcSet":"/static/cbb5ab93a2c2120533ea23eef202bce8/e257a/osBg.webp 193w,\n/static/cbb5ab93a2c2120533ea23eef202bce8/97efe/osBg.webp 385w,\n/static/cbb5ab93a2c2120533ea23eef202bce8/8a33d/osBg.webp 770w","type":"image/webp","sizes":"(min-width: 770px) 770px, 100vw"}]},"width":770,"height":453}},"publicURL":"/static/cbb5ab93a2c2120533ea23eef202bce8/osBg.jpg"}}}}]}},"pageContext":{"slug":"/post/220225/os_dualmode/"}},
    "staticQueryHashes": []}