{
    "componentChunkName": "component---src-templates-post-template-tsx",
    "path": "/post/211202/typescript_basic4/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h3>1. 블록 영역 변수, 상수 선언</h3>\n<p>let, const 키워드를 통해 블록 스코프 변수와 상수를 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">let</span> num<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\n  <span class=\"token keyword\">const</span> num2<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// error! not defined</span></code></pre></div>\n<h3>2. 템플릿 리터럴</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">//당연하게도 템플릿 리터럴도 사용가능하다.</span>\r\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'leesky'</span>\r\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">님 반갑습니다!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>3. 화살표 함수</h3>\n<p>ES6부터 Expression에 한해 화살표 함수 식을 활용할 수 있다. Typescript 또한\r\n화살표 함수식을 사용 가능하고, 매개변수, 리턴 타입을 명시적으로 설정하여 컴파일\r\n과정에서 타입 검사를 수행해 사전에 문제를 방지할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>4. 전개 문법, 나머지 매개변수</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">//string을 반환하는 함수를 반환하는 foo 함수인데 매개변수는 string타입이고</span>\r\n<span class=\"token comment\">//아무것도 안들어오면 'leesky' 할당</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'leesky'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'leesky'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">let</span> bar <span class=\"token operator\">=</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>전개 문법</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> arr<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\r\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//[1,2,3,4,5,6,7]</span></code></pre></div>\n<p>나머지 매개변수</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">makeArr</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> args\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token function\">makeArr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'str'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>5.비구조화 할당</h3>\n<p>비구조화 할당을 통해 배열, 객체 아이템 및 속성을 변수에 쉽게 할당 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">//배열 비구조화 할당 ( 순서 중요 )</span>\r\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'leesky'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> <span class=\"token comment\">//good!</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">//객체 비구조화 할당</span>\r\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'leesky'</span><span class=\"token punctuation\">,</span>\r\n  age<span class=\"token operator\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">살 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">입니다!.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sayHi <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj\r\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> <span class=\"token comment\">//good!</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> hello_module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">letsHello</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>nameArr<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function-variable function\">letsHello</span><span class=\"token operator\">:</span> nameArr <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    nameArr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">님 안녕하세요?</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// ?는 옵셔널함을 의미</span>\r\n<span class=\"token keyword\">let</span> temp<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function-variable function\">letsHello</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>nameArr<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\r\n  whatsYourNameFunction<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> hello_module\r\n\r\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>\r\n  letsHello<span class=\"token operator\">:</span> helloAction<span class=\"token punctuation\">,</span>\r\n  <span class=\"token comment\">//없으면 기본값 설정해주기</span>\r\n  whatsYourNameFunction<span class=\"token operator\">:</span> <span class=\"token function-variable function\">getNameAction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'what is you name?'</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> temp\r\n\r\n<span class=\"token function\">helloAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'leesky'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'leesky2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'leesky3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//good!</span>\r\n<span class=\"token function\">getNameAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//good!</span></code></pre></div>\n<blockquote>\n<p>뭔가 예제를 더욱 쉽게 만들어보려고 노력하는데 변수명이나 이런게\r\n생각이 잘안난다…좀더 시간을 가지고 신중히 변수이름을 짓는\r\n연습을 해야겠다.</p>\n</blockquote>\n<h4>참고</h4>\n<ul>\n<li><a href=\"https://yamoo9.gitbook.io/typescript/\" target=\"_blank\" rel=\"nofollow\">Typescript 가이드북</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-%EB%B8%94%EB%A1%9D-%EC%98%81%EC%97%AD-%EB%B3%80%EC%88%98-%EC%83%81%EC%88%98-%EC%84%A0%EC%96%B8\">1. 블록 영역 변수, 상수 선언</a></p>\n</li>\n<li>\n<p><a href=\"#2-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4\">2. 템플릿 리터럴</a></p>\n</li>\n<li>\n<p><a href=\"#3-%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98\">3. 화살표 함수</a></p>\n</li>\n<li>\n<p><a href=\"#4-%EC%A0%84%EA%B0%9C-%EB%AC%B8%EB%B2%95-%EB%82%98%EB%A8%B8%EC%A7%80-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98\">4. 전개 문법, 나머지 매개변수</a></p>\n</li>\n<li>\n<p><a href=\"#5%EB%B9%84%EA%B5%AC%EC%A1%B0%ED%99%94-%ED%95%A0%EB%8B%B9\">5.비구조화 할당</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Typescript 기본기 다지기(4)","summary":"Typescript에서 ES6 사용해보기!","date":"2021.12.02.","categories":["Typescript"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#3878c8","images":{"fallback":{"src":"/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/5371e/typescript.png","srcSet":"/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/24271/typescript.png 56w,\n/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/39d80/typescript.png 113w,\n/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/5371e/typescript.png 225w","sizes":"(min-width: 225px) 225px, 100vw"},"sources":[{"srcSet":"/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/d66a6/typescript.webp 56w,\n/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/a72fd/typescript.webp 113w,\n/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/1cf63/typescript.webp 225w","type":"image/webp","sizes":"(min-width: 225px) 225px, 100vw"}]},"width":225,"height":225}},"publicURL":"/static/ae9e22bc0023fde9b3e0c6fce9db0f0a/typescript.png"}}}}]}},"pageContext":{"slug":"/post/211202/typescript_basic4/"}},
    "staticQueryHashes": []}